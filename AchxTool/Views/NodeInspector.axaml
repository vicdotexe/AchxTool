<UserControl x:Class="AchxTool.NodeInspector"
             xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:achxTool="clr-namespace:AchxTool"
             xmlns:converters="clr-namespace:AchxTool.Converters"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:nodes="clr-namespace:AchxTool.ViewModels.Nodes"
             xmlns:views="clr-namespace:AchxTool.Views"
             xmlns:vm="clr-namespace:AchxTool.ViewModels"
             d:DesignHeight="450"
             d:DesignWidth="800"
             x:DataType="vm:NodeInspectorViewModel"
             mc:Ignorable="d">
  <UserControl.Resources>
    <converters:TextureToFileInfoConverter x:Key="TextureToFileInfoConverter" />
  </UserControl.Resources>
  <UserControl.DataTemplates>
    <DataTemplate DataType="{x:Type nodes:AnimationViewModel}">
      <Grid ColumnDefinitions="Auto,*" RowDefinitions="Auto, Auto">
        <TextBlock Grid.Column="0" Text="Name:" />
        <TextBox Grid.Column="1" Text="{Binding Name}" />

        <TextBlock Grid.Row="1"
                   Grid.Column="0"
                   Text="Texture" />
        <ComboBox Grid.Row="1"
                  Grid.Column="1"
                  ItemsSource="{Binding $parent[achxTool:NodeInspector].((vm:NodeInspectorViewModel)DataContext).TextureManager}"
                  SelectedItem="{Binding TextureFile, Converter={StaticResource TextureToFileInfoConverter}, Mode=TwoWay}"
                  Tag="{Binding}">
          <ComboBox.SelectionBoxItemTemplate>
            <!-- why doesn't the default template initialize selection? -->
            <DataTemplate>
              <TextBlock Text="{Binding $parent[ComboBox].((nodes:AnimationViewModel)Tag).TextureFile.Name}" />
            </DataTemplate>
          </ComboBox.SelectionBoxItemTemplate>
          <ComboBox.ItemTemplate>
            <DataTemplate DataType="{x:Type vm:TextureViewModel}">
              <TextBlock Text="{Binding Name}" />
            </DataTemplate>
          </ComboBox.ItemTemplate>
        </ComboBox>
      </Grid>
    </DataTemplate>
    <DataTemplate DataType="{x:Type nodes:FrameViewModel}">
      <Grid x:Name="MainGrid"
            Margin="4"
            ColumnDefinitions="Auto, *"
            RowDefinitions="Auto, Auto, Auto, Auto, Auto, Auto, Auto, Auto, Auto">
        <Grid.Styles>
          <Style Selector="NumericUpDown">
            <Setter Property="ShowButtonSpinner" Value="True" />
            <Setter Property="Padding" Value="0" />
          </Style>
          <Style Selector="Grid#MainGrid > :is(Control)">
            <Setter Property="Margin" Value="0,4" />
          </Style>
          <Style Selector="Grid#MainGrid > TextBlock">
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="Margin" Value="0,0,4,0" />
          </Style>

        </Grid.Styles>
        <TextBlock Grid.Row="0"
                   Grid.Column="0"
                   Text="Name:" />
        <TextBlock Grid.Row="1"
                   Grid.Column="0"
                   Text="Flip Horizontal:" />
        <TextBlock Grid.Row="2"
                   Grid.Column="0"
                   Text="Flip Vertical:" />
        <TextBlock Grid.Row="3"
                   Grid.Column="0"
                   Text="Frame Length:" />
        <TextBlock Grid.Row="4"
                   Grid.Column="0"
                   Text="X:" />
        <TextBlock Grid.Row="5"
                   Grid.Column="0"
                   Text="Y:" />
        <TextBlock Grid.Row="6"
                   Grid.Column="0"
                   Text="Width:" />
        <TextBlock Grid.Row="7"
                   Grid.Column="0"
                   Text="Height:" />

        <TextBox Grid.Row="0"
                 Grid.Column="1"
                 Text="{Binding Name}" />
        <CheckBox Grid.Row="1"
                  Grid.Column="1"
                  IsChecked="{Binding FlipHorizontal}" />
        <CheckBox Grid.Row="2"
                  Grid.Column="1"
                  IsChecked="{Binding FlipVertical}" />
        <NumericUpDown Grid.Row="3"
                       Grid.Column="1"
                       AllowSpin="True"
                       ShowButtonSpinner="False"
                       Value="{Binding FrameLength}" />
        <NumericUpDown Grid.Row="4"
                       Grid.Column="1"
                       Value="{Binding X}" />
        <NumericUpDown Grid.Row="5"
                       Grid.Column="1"
                       Value="{Binding Y}" />
        <NumericUpDown Grid.Row="6"
                       Grid.Column="1"
                       Value="{Binding Width}" />
        <NumericUpDown Grid.Row="7"
                       Grid.Column="1"
                       Value="{Binding Height}" />
        <!-- todo: this combobox feels gross -->
        <TextBlock Grid.Row="8"
                   Grid.Column="0"
                   Text="Texture" />
        <ComboBox Grid.Row="8"
                  Grid.Column="1"
                  ItemsSource="{Binding $parent[achxTool:NodeInspector].((vm:NodeInspectorViewModel)DataContext).TextureManager}"
                  SelectedItem="{Binding TextureFile, Converter={StaticResource TextureToFileInfoConverter}, Mode=TwoWay}"
                  Tag="{Binding}">
          <ComboBox.SelectionBoxItemTemplate>
            <!-- why doesn't the default template initialize selection? -->
            <DataTemplate>
              <TextBlock Text="{Binding $parent[ComboBox].((nodes:FrameViewModel)Tag).TextureFile.Name}" />
            </DataTemplate>
          </ComboBox.SelectionBoxItemTemplate>
          <ComboBox.ItemTemplate>
            <DataTemplate DataType="{x:Type vm:TextureViewModel}">
              <TextBlock Text="{Binding Name}" />
            </DataTemplate>
          </ComboBox.ItemTemplate>
        </ComboBox>

      </Grid>
    </DataTemplate>
  </UserControl.DataTemplates>
  <ContentPresenter Content="{Binding}" DataContext="{Binding SelectedNode}" />

</UserControl>
